@inherits LayoutComponentBase
@inject AlertService alertService
@inject IJSRuntime JSRuntime
@using Microsoft.JSInterop

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout> 
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Outlined.Notifications" Color="Color.Inherit" />
        <MudAvatar Color="Color.Secondary" Size="Size.Medium" Class="avatar">J</MudAvatar>
        <MudIconButton Icon="@Icons.Material.Outlined.MoreVert" Color="Color.Inherit" />
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        @if (alertService.IsSuccessAlert)
        {
            <MudAlert Severity="Severity.Success" ContentAlignment="HorizontalAlignment.Center" Variant="Variant.Filled" ShowCloseIcon="true" CloseIconClicked="() => CloseAlertSuccess()">@alertService.SuccessText </MudAlert>
        }
        @Body
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void CloseAlertSuccess()
    {
        alertService.IsSuccessAlert = false;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (alertService.IsSuccessAlert)
            {
                alertService.IsSuccessAlert = false;
                await JSRuntime.InvokeVoidAsync("closeAlertAfterDelay");
            }
        }
    }
}